[{"/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/index.js":"1","/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/App.js":"2","/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/Components/Navbar/Navbar.js":"3","/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/Components/Filter/Filter.js":"4","/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/Components/Content/Content.js":"5","/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/Components/Content/Contents/Cards/Cards.js":"6","/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/Components/Content/Contents/Cards/Card/Cards.js":"7","/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/Components/Filter/TypeFilter/TypeFilters.js":"8","/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/Components/Filter/TypeFilter/BoxFilter/BoxFilter.js":"9","/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/Components/Filter/ColorFilter/ColorFilter.js":"10","/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/Components/Filter/ColorFilter/BoxColor/BoxColor.js":"11","/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/Components/Filter/GenderFilter/GenderFilter.js":"12","/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/Components/Filter/GenderFilter/Genders/Genders.js":"13","/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/Components/Navbar/Logo/Logo.js":"14","/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/lib/Capitalize.js":"15","/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/lib/repeatedValuesArrays.js":"16","/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/store.js":"17","/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/Components/Content/Contents/Paragraph/Paragraph.js":"18","/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/Components/Content/Modal/ModalContent.js":"19","/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/Components/Images/Img.js":"20","/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/Components/Content/Modal/Evolution/Evolution.js":"21"},{"size":200,"mtime":1607609195745,"results":"22","hashOfConfig":"23"},{"size":697,"mtime":1607869339765,"results":"24","hashOfConfig":"23"},{"size":1392,"mtime":1607937587058,"results":"25","hashOfConfig":"23"},{"size":5069,"mtime":1607936495127,"results":"26","hashOfConfig":"23"},{"size":1939,"mtime":1607934885997,"results":"27","hashOfConfig":"23"},{"size":490,"mtime":1607899880044,"results":"28","hashOfConfig":"23"},{"size":657,"mtime":1607917099096,"results":"29","hashOfConfig":"23"},{"size":805,"mtime":1607802150607,"results":"30","hashOfConfig":"23"},{"size":680,"mtime":1607936553179,"results":"31","hashOfConfig":"23"},{"size":510,"mtime":1607806003583,"results":"32","hashOfConfig":"23"},{"size":815,"mtime":1607936978421,"results":"33","hashOfConfig":"23"},{"size":731,"mtime":1607937631352,"results":"34","hashOfConfig":"23"},{"size":523,"mtime":1607921220997,"results":"35","hashOfConfig":"23"},{"size":172,"mtime":1607867938775,"results":"36","hashOfConfig":"23"},{"size":148,"mtime":1607701099459,"results":"37","hashOfConfig":"23"},{"size":457,"mtime":1607846656386,"results":"38","hashOfConfig":"23"},{"size":11020,"mtime":1607936892728,"results":"39","hashOfConfig":"23"},{"size":335,"mtime":1607844770981,"results":"40","hashOfConfig":"23"},{"size":9786,"mtime":1607936757994,"results":"41","hashOfConfig":"23"},{"size":207,"mtime":1607894430451,"results":"42","hashOfConfig":"23"},{"size":998,"mtime":1607932753453,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"vbafa6",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"46"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/index.js",[],["93","94"],"/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/App.js",[],"/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/Components/Navbar/Navbar.js",["95"],"import React, { useEffect, useRef } from 'react'\nimport { connect } from 'react-redux'\nimport { Logo } from \"./Logo/Logo\"\nimport \"./Navbar.css\"\n\n\n\nconst Navbar = ({ props, changeInput, filterInput }) => {\n\n    const isFirstRun__1 = useRef(true)\n\n    const style = {\n        position: \"relative\",\n        margin: \"1rem 5rem 2.5rem\"\n    }\n\n\n    useEffect(() => {\n        if (isFirstRun__1.current) {\n            isFirstRun__1.current = false\n            return\n        }\n        const timer = setTimeout(() => {\n\n\n            filterInput()\n        }, 1000)\n        return () => {\n            clearTimeout(timer)\n\n        }\n    }, [props.searchBox.input])\n\n\n\n    return (\n        <div style={style}>\n            <div className=\"logo\" >\n                <Logo />\n            </div>\n\n            <div className=\"searchBox\" >\n                <i className=\"material-icons\">search</i>\n                <input type=\"text\" value={props.searchBox.input} onChange={changeInput} ></input>\n            </div>\n        </div>\n    )\n}\n\nconst mapStateToProps = props => ({\n    props: props\n})\n\nconst mapDispatchToProps = dispatch => ({\n    changeInput(input) {\n        dispatch({\n            type: \"changeInput\",\n            input\n        })\n    },\n\n    filterInput() {\n        dispatch({\n            type: \"filterInput\"\n        })\n    },\n\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Navbar)","/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/Components/Filter/Filter.js",["96"],"import React, { Fragment, useEffect, useRef } from 'react'\nimport { connect } from 'react-redux'\nimport { TypeFilters } from \"./TypeFilter/TypeFilters\"\nimport { ColorFilter } from \"./ColorFilter/ColorFilter\"\nimport { GenderFilter } from \"./GenderFilter/GenderFilter\"\n\nimport axios from \"axios\"\n\nconst Filter = ({ props, initUseEffect, clickMoreOrLess, addOrDeleteTypesHandler, addOrDeleteColorHandler, gendersHandler, setTypeSelect, setColorSelect, setGenderSelect }) => {\n    const isFirstRun1 = useRef(true)\n    const isFirstRun2 = useRef(true)\n    const isFirstRun3 = useRef(true)\n\n\n    useEffect(() => {\n\n        const getFilterTypes = axios.get(\"https://pokeapi.co/api/v2/type\")\n        const getFilterColors = axios.get(\"https://pokeapi.co/api/v2/pokemon-color\")\n        const getFilterGenders = axios.get(\"https://pokeapi.co/api/v2/gender\")\n\n        Promise.all([getFilterTypes, getFilterColors, getFilterGenders])\n            .then(response => {\n                const [types, colors, genders] = response\n\n                const newState = {\n                    types: types.data.results,\n                    colors: colors.data.results,\n                    genders: genders.data.results\n                }\n                initUseEffect(newState)\n            })\n    }, [])\n\n    useEffect(() => {\n        if (isFirstRun1.current) {\n            isFirstRun1.current = false\n            return\n        }\n\n        let activeFilter = props.types.selected\n\n        Promise.all([...activeFilter.map(urlActive => axios(urlActive))])\n            .then(results => {\n\n                const dataArray = results.filter(data => !!data)\n                    .map(result => result.data.pokemon)\n                    .map(arrayItems => arrayItems.map(i => Number(i.pokemon.url.split(\"/\")[6])))\n\n                setTypeSelect(dataArray)\n            })\n    }, [props.types.selected, setTypeSelect])\n\n    useEffect(() => {\n        if (isFirstRun2.current) {\n            isFirstRun2.current = false\n            return\n        }\n        let activeFilter = props.colors.selected\n\n        Promise.all([...activeFilter.map(urlActive => axios(urlActive))])\n            .then(results => {\n\n                const dataArray = results\n                    .map(result => result.data.pokemon_species)\n                    .map(arrayItems => arrayItems.map(i => Number(i.url.split(\"/\")[6])))\n                setColorSelect(dataArray)\n\n            })\n    }, [props.colors.selected, setColorSelect])\n\n    useEffect(() => {\n        if (isFirstRun3.current) {\n            isFirstRun3.current = false\n            return\n        }\n        let activeFilter = props.genders.selected\n        if (activeFilter.length === 0) return\n\n        if (activeFilter === \"none\") {\n            return setGenderSelect([])\n        }\n\n        axios.get(activeFilter)\n            .then(results => {\n                const dataArray = results.data.pokemon_species_details\n                    .map(arrayItems => arrayItems.pokemon_species)\n                    .map(i => Number(i.url.split(\"/\")[6]))\n\n                setGenderSelect(dataArray)\n            })\n    }, [props.genders.selected, setGenderSelect])\n\n    return (\n        <Fragment>\n            <h5>Filter</h5>\n            <div className=\"divider\"></div>\n            <TypeFilters\n                filter={props.types.types}\n                show={props.types.showMore}\n                ClickShow={clickMoreOrLess}\n                handlerClick={addOrDeleteTypesHandler}\n            />\n            <div className=\"divider\"></div>\n            <ColorFilter\n                filter={props.colors.types}\n                handlerClick={addOrDeleteColorHandler}\n            />\n            <div className=\"divider\"></div>\n            <GenderFilter\n                filter={props.genders.types}\n                handlerPick={gendersHandler}\n            />\n        </Fragment>\n    )\n}\n\nconst mapStateToProps = props => ({\n    props: props\n})\n\nconst mapDispatchToProps = dispatch => ({\n    initUseEffect(newState) {\n        dispatch({\n            type: \"init\",\n            newState\n        })\n    },\n    clickMoreOrLess() {\n        dispatch({\n            type: \"clickMoreOrLess\"\n        })\n    },\n    addOrDeleteTypesHandler(url, action) {\n        dispatch({\n            type: \"addOrDeleteTypesHandler\",\n            url,\n            action\n        })\n    },\n    addOrDeleteColorHandler(url, action) {\n        dispatch({\n            type: \"addOrDeleteColorHandler\",\n            url,\n            action\n        })\n    },\n    gendersHandler(url) {\n        dispatch({\n            type: \"gendersHandler\",\n            url,\n        })\n    },\n\n    setTypeSelect(dataArray) {\n        dispatch({\n            type: \"setTypeSelect\",\n            dataArray\n        })\n    },\n    setColorSelect(dataArray) {\n        dispatch({\n            type: \"setColorSelect\",\n            dataArray\n        })\n    },\n\n    setGenderSelect(dataArray) {\n        dispatch({\n            type: \"setGenderSelect\",\n            dataArray\n        })\n    }\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)\n","/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/Components/Content/Content.js",["97","98"],"import React, { Fragment, useEffect, useRef } from 'react'\nimport { connect } from \"react-redux\";\nimport axios from \"axios\"\nimport { Cards } from \"./Contents/Cards/Cards\"\nimport { Paragraph } from './Contents/Paragraph/Paragraph';\nimport 'materialize-css';\nimport Modal from './Modal/ModalContent';\n\n\n\nconst Content = ({ props, initContent, handlerMoreContent, changeFilter, handlerPickPokemon }) => {\n\n    const isFirstRun_1 = useRef(true)\n\n\n\n    useEffect(() => {\n        axios.get(\"https://pokeapi.co/api/v2/pokedex/national\")\n            .then(Response => {\n                const pokemonList = Response.data.pokemon_entries\n                localStorage.setItem(\"pokemonsInStorage\", JSON.stringify(pokemonList))\n\n                initContent(pokemonList)\n            })\n    }, [])\n\n\n    useEffect(() => {\n        if (isFirstRun_1.current) {\n            isFirstRun_1.current = false\n            return\n        }\n\n        changeFilter()\n    }, [props.selected])\n\n\n    return (\n        <Fragment>\n            <Paragraph\n                pokemons={props.pokemons.list}\n            />\n            <Modal />\n\n            <Cards pokemons={props.pokemons.list} click={handlerPickPokemon} />\n\n            {props.buttonOn ? <button onClick={() => { handlerMoreContent() }} >Load More</button> : null}\n        </Fragment>\n    )\n}\nconst mapStateToProps = props => ({\n    props: props\n})\n\nconst mapDispatchToProps = dispatch => ({\n    initContent(pokemonList) {\n        dispatch({\n            type: \"initContent\",\n            pokemonList\n        })\n    },\n    handlerMoreContent() {\n        dispatch({\n            type: \"handlerMoreContent\",\n        })\n    },\n    changeFilter() {\n        dispatch({\n            type: \"changeFilter\"\n        })\n    }\n    ,\n    handlerPickPokemon(id) {\n        dispatch({\n            type: \"handlerPickPokemon\",\n            id\n\n        })\n    }\n\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Content)","/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/Components/Content/Contents/Cards/Cards.js",[],"/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/Components/Content/Contents/Cards/Card/Cards.js",[],["99","100"],"/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/Components/Filter/TypeFilter/TypeFilters.js",[],"/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/Components/Filter/TypeFilter/BoxFilter/BoxFilter.js",[],"/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/Components/Filter/ColorFilter/ColorFilter.js",[],"/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/Components/Filter/ColorFilter/BoxColor/BoxColor.js",[],"/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/Components/Filter/GenderFilter/GenderFilter.js",[],"/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/Components/Filter/GenderFilter/Genders/Genders.js",[],"/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/Components/Navbar/Logo/Logo.js",[],"/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/lib/Capitalize.js",[],"/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/lib/repeatedValuesArrays.js",[],"/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/store.js",[],"/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/Components/Content/Contents/Paragraph/Paragraph.js",[],"/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/Components/Content/Modal/ModalContent.js",["101"],"import React, { Fragment, useEffect, useRef } from \"react\"\nimport { connect } from \"react-redux\"\nimport $ from \"jquery\"\nimport axios from \"axios\"\nimport { Evolution } from \"./Evolution/Evolution\"\n\nconst Modal = ({ props, handlerDetailsPokemon }) => {\n    const isFirstRun_2 = useRef(true)\n    const isFirstRun_3 = useRef(true)\n\n\n    useEffect(() => {\n        if (isFirstRun_2.current) {\n            isFirstRun_2.current = false\n            return\n        }\n\n        const pokemonSpecies = `https://pokeapi.co/api/v2/pokemon-species/${props.modal.selectedId}`\n        const pokemons = `https://pokeapi.co/api/v2/pokemon/${props.modal.selectedId}`\n\n        Promise.all([axios.get(pokemonSpecies), axios.get(pokemons)])\n            .then(response => {\n\n                const { data: dataPokemonSpecies } = response[0]\n                const { data: dataPokemon } = response[1]\n\n                let idArray = dataPokemonSpecies.id.toString().split(\"\")\n                let digits = idArray.length\n                for (digits; digits < 3; digits++) {\n                    idArray.unshift(\"0\")\n                }\n\n                let id = idArray.join(\"\")\n                let pokemonHabitat = dataPokemonSpecies.habitat == null ? \"Not Found\" : dataPokemonSpecies.habitat.name\n\n                const descriptionPokemon = {\n                    name: dataPokemonSpecies.name,\n                    id: id,\n                    color: dataPokemonSpecies.color.name,\n                    height: dataPokemon.height,\n                    weight: dataPokemon.weight,\n                    category: dataPokemonSpecies.egg_groups.map(element => element.name).join(\", \"),\n                    habitat: pokemonHabitat,\n                    types: dataPokemon.types.map(element => element.type.name).join(\", \"),\n                    description: dataPokemonSpecies.flavor_text_entries[0].flavor_text,\n                }\n\n                const gendersUrl1 = `https://pokeapi.co/api/v2/gender/1/`\n                const gendersUrl2 = `https://pokeapi.co/api/v2/gender/2/`\n                const gendersUrl3 = `https://pokeapi.co/api/v2/gender/3/`\n\n                Promise.all([axios.get(gendersUrl1), axios.get(gendersUrl2), axios.get(gendersUrl3)])\n                    .then(response => {\n                        const { data: url1Response } = response[0]\n                        const { data: url2Response } = response[1]\n                        const { data: url3Response } = response[2]\n\n                        const isFemale = url1Response.pokemon_species_details\n                            .filter(element => element.pokemon_species.name === descriptionPokemon.name).length === 0 ? false : true\n                        const isMale = url2Response.pokemon_species_details\n                            .filter(element => element.pokemon_species.name === descriptionPokemon.name).length === 0 ? false : true\n                        const isGenderless = url3Response.pokemon_species_details\n                            .filter(element => element.pokemon_species.name === descriptionPokemon.name).length === 0 ? false : true\n\n                        const gender = []\n\n                        if (isFemale) {\n                            gender.push(\"Female\")\n                        }\n                        if (isMale) {\n                            gender.push(\"Male\")\n                        }\n                        if (isGenderless) {\n                            gender.push(\"Genderless\")\n                        }\n\n                        descriptionPokemon.gender = gender.join(\", \")\n\n                        axios.get(dataPokemonSpecies.evolution_chain.url)\n                            .then(response => {\n                                const { data: dataEvolutionChain } = response\n\n                                const pokemonEvolution = []\n\n                                try {\n                                    pokemonEvolution.push({\n                                        name: dataEvolutionChain.chain.species.name,\n                                        url: Number(dataEvolutionChain.chain.species.url.split(\"/\")[6])\n                                    })\n                                } catch (error) { }\n\n                                try {\n                                    pokemonEvolution.push({\n                                        name: dataEvolutionChain.chain.evolves_to[0].species.name,\n                                        url: Number(dataEvolutionChain.chain.evolves_to[0].species.url.split(\"/\")[6])\n                                    })\n                                } catch (error) { }\n\n                                try {\n                                    pokemonEvolution.push({\n                                        name: dataEvolutionChain.chain.evolves_to[0].evolves_to[0].species.name,\n                                        url: Number(dataEvolutionChain.chain.evolves_to[0].evolves_to[0].species.url.split(\"/\")[6])\n                                    })\n                                } catch (error) { }\n\n\n                                descriptionPokemon.evolution = pokemonEvolution\n                                handlerDetailsPokemon(descriptionPokemon)\n                            })\n                    })\n            })\n\n    }, [props.modal.selectedId])\n\n    useEffect(() => {\n        if (isFirstRun_3.current) {\n            isFirstRun_3.current = false\n            return\n        }\n\n\n\n        $(\"#trigerModal\")[0].click()\n\n    }, [props.modal.detail, props.modal.reShow])\n\n    return (\n        <Fragment>\n\n            <a style={{ display: \"none\" }} id=\"trigerModal\" className=\"waves-effect waves-light btn modal-trigger\" href=\"#modal1\">Modal</a>\n            <div id=\"modal1\" className=\"modal\">\n                <div className=\"modal-content\">\n                    <div className=\"row\">\n                        <div className=\"col s6\">\n                            <div className=\"card-image\">\n                                <img style={{ maxWidth: \"100%\" }} src={`https://assets.pokemon.com/assets/cms2/img/pokedex/full/${props.modal.detail.id}.png`} alt=\"none\" />\n                            </div>\n                        </div>\n                        <div className=\"col s6\">\n                            <div className=\"row\">\n                                <div className=\"col s4\">\n                                    <h5>{props.modal.detail.name}</h5>\n                                </div>\n                                <div className=\"col s2 offset-s4\">\n                                    <h3>{props.modal.detail.id} </h3>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <p>{props.modal.detail.description}</p>\n                            </div>\n                            <div className=\"row\">\n                                <table>\n                                    <tbody>\n                                        <tr>\n                                            <td>Height</td>\n                                            <td>{props.modal.detail.height} m </td>\n                                        </tr>\n                                        <tr>\n                                            <td>Weight</td>\n                                            <td>{props.modal.detail.weight} Kg</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Category</td>\n                                            <td>{props.modal.detail.category}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Gender</td>\n                                            <td>{props.modal.detail.gender}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Habitat</td>\n                                            <td>{props.modal.detail.habitat}</td>\n                                        </tr>\n                                        <tr>\n                                            <td>Color</td>\n                                            <td>{props.modal.detail.color}</td>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col s12\">\n                                    <h5>Types</h5>\n                                </div>\n                            </div>\n                            <div className=\"row\">\n                                <div className=\"col s6\">\n                                    <p>{props.modal.detail.types}</p>\n                                </div>\n                                <div className=\"col s6\">\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <hr />\n                    <Evolution pokemonEvolution={props.modal.detail.evolution} />\n                </div>\n                <div className=\"modal-footer\">\n                    <a href=\"#a\" className=\"modal-close waves-effect waves-green btn-flat\">Cerrar</a>\n                </div>\n            </div>\n        </Fragment>\n    )\n}\n\nconst mapStateToProps = props => ({\n    props: props\n})\n\nconst mapDispatchToProps = dispatch => ({\n    handlerDetailsPokemon(descriptionPokemon) {\n        dispatch({\n            type: \"handlerDetailsPokemon\",\n            descriptionPokemon\n        })\n    }\n\n})\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal)","/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/Components/Images/Img.js",[],["102","103"],"/Users/fabiocuello/Documents/Developer/WebDeveloper/React/pokemonpage/src/Components/Content/Modal/Evolution/Evolution.js",[],{"ruleId":"104","replacedBy":"105"},{"ruleId":"106","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":32,"column":8,"nodeType":"110","endLine":32,"endColumn":31,"suggestions":"111"},{"ruleId":"108","severity":1,"message":"112","line":32,"column":8,"nodeType":"110","endLine":32,"endColumn":10,"suggestions":"113"},{"ruleId":"108","severity":1,"message":"114","line":25,"column":8,"nodeType":"110","endLine":25,"endColumn":10,"suggestions":"115"},{"ruleId":"108","severity":1,"message":"116","line":35,"column":8,"nodeType":"110","endLine":35,"endColumn":24,"suggestions":"117"},{"ruleId":"104","replacedBy":"118"},{"ruleId":"106","replacedBy":"119"},{"ruleId":"108","severity":1,"message":"120","line":113,"column":8,"nodeType":"110","endLine":113,"endColumn":32,"suggestions":"121"},{"ruleId":"104","replacedBy":"122"},{"ruleId":"106","replacedBy":"123"},"no-native-reassign",["124"],"no-negated-in-lhs",["125"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'filterInput'. Either include it or remove the dependency array. If 'filterInput' changes too often, find the parent component that defines it and wrap that definition in useCallback.","ArrayExpression",["126"],"React Hook useEffect has a missing dependency: 'initUseEffect'. Either include it or remove the dependency array. If 'initUseEffect' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["127"],"React Hook useEffect has a missing dependency: 'initContent'. Either include it or remove the dependency array. If 'initContent' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["128"],"React Hook useEffect has a missing dependency: 'changeFilter'. Either include it or remove the dependency array. If 'changeFilter' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["129"],["124"],["125"],"React Hook useEffect has a missing dependency: 'handlerDetailsPokemon'. Either include it or remove the dependency array. If 'handlerDetailsPokemon' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["130"],["124"],["125"],"no-global-assign","no-unsafe-negation",{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},"Update the dependencies array to be: [filterInput, props.searchBox.input]",{"range":"141","text":"142"},"Update the dependencies array to be: [initUseEffect]",{"range":"143","text":"144"},"Update the dependencies array to be: [initContent]",{"range":"145","text":"146"},"Update the dependencies array to be: [changeFilter, props.selected]",{"range":"147","text":"148"},"Update the dependencies array to be: [handlerDetailsPokemon, props.modal.selectedId]",{"range":"149","text":"150"},[628,651],"[filterInput, props.searchBox.input]",[1274,1276],"[initUseEffect]",[779,781],"[initContent]",[944,960],"[changeFilter, props.selected]",[5274,5298],"[handlerDetailsPokemon, props.modal.selectedId]"]